{"moduleFile":{"sourceFilePath":"/home/ec2-user/environment/rpg-webcomponents/src/components/character-sheet/equipment/generic/equipment-generic.tsx","localImports":[],"externalImports":["@stencil/core"],"potentialCmpRefs":[{"tag":"rpg-text-input"}],"cmpMeta":{"tagNameMeta":"rpg-equipment-generic","stylesMeta":{"$":{"externalStyles":[{"absolutePath":"/home/ec2-user/environment/rpg-webcomponents/src/components/character-sheet/equipment/generic/equipment-generic.scss","cmpRelativePath":"./equipment-generic.scss","originalComponentPath":"./equipment-generic.scss"}]}},"assetsDirsMeta":[],"hostMeta":{},"dependencies":[],"jsdoc":{"name":"EquipmentGeneric","tags":[],"documentation":"","type":"typeof EquipmentGeneric"},"encapsulationMeta":0,"componentClass":"EquipmentGeneric","membersMeta":{"el":{"memberType":64},"useItem":{"memberType":32,"attribType":{"text":"() => boolean","optional":false,"required":false,"typeReferences":{}},"jsdoc":{"name":"useItem","tags":[],"documentation":"","type":"() => boolean","returns":{"type":"boolean","documentation":""},"parameters":[]}},"currentCount":{"memberType":16},"currentWeight":{"memberType":16},"itemWeight":{"memberType":16},"name":{"memberType":1,"attribName":"name","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"name","tags":[],"documentation":"","type":"string","default":"''"}},"startingCount":{"memberType":1,"attribName":"starting-count","attribType":{"text":"number","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"startingCount","tags":[],"documentation":"","type":"number","default":"0"}},"weight":{"memberType":1,"attribName":"weight","attribType":{"text":"number","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":8,"jsdoc":{"name":"weight","tags":[],"documentation":"","type":"number","default":"0"}},"size":{"memberType":1,"attribName":"size","attribType":{"text":"string","required":false,"optional":false,"typeReferences":{}},"reflectToAttrib":false,"propType":2,"jsdoc":{"name":"size","tags":[],"documentation":"","type":"string"}}},"eventsMeta":[],"listenersMeta":[]},"hasSlot":false,"hasSvg":false,"jsFilePath":"/home/ec2-user/environment/rpg-webcomponents/src/components/character-sheet/equipment/generic/equipment-generic.js"},"jsText":"export class EquipmentGeneric {\r\n    constructor() {\r\n        this.name = '';\r\n        this.startingCount = 0;\r\n        this.weight = 0;\r\n        this.currentWeight = 0;\r\n    }\r\n    useItem() {\r\n        this.currentCount = this.currentCount - 1;\r\n        if (this.currentCount < 0) {\r\n            this.currentCount = 0;\r\n            return false;\r\n        }\r\n        this.eventUsed();\r\n        return true;\r\n    }\r\n    componentWillLoad() {\r\n        this.currentCount = this.startingCount;\r\n        this.itemWeight = this.weight;\r\n    }\r\n    componentDidLoad() {\r\n        this.el.querySelector('.weight')\r\n            .addEventListener('rpg_text_changed', (ev) => this.playerChangedWeight(ev));\r\n        this.el.querySelector('.quantity')\r\n            .addEventListener('rpg_text_changed', (ev) => this.playerChangedQuantity(ev));\r\n    }\r\n    recalculateWeight() {\r\n        this.currentWeight = this.currentCount * this.itemWeight;\r\n        console.log(this.currentWeight);\r\n        this.eventWeightChanged();\r\n    }\r\n    playerChangedWeight(event) {\r\n        this.itemWeight = parseInt(event.detail.newText);\r\n        this.recalculateWeight();\r\n    }\r\n    playerChangedQuantity(event) {\r\n        this.currentCount = parseInt(event.detail.newText);\r\n        this.recalculateWeight();\r\n    }\r\n    eventUsed() {\r\n        const eUsed = new CustomEvent('rpg_item_used', {\r\n            detail: {\r\n                name: this.name,\r\n                remainingCount: this.currentCount,\r\n            }\r\n        });\r\n        this.el.dispatchEvent(eUsed);\r\n    }\r\n    /**\r\n     * Fires an event with the item's new calculated weight.\r\n     */\r\n    eventWeightChanged() {\r\n        const weight = new CustomEvent('rpg_item_weight_changed', {\r\n            detail: {\r\n                name: this.name,\r\n                newWeight: this.currentWeight\r\n            }\r\n        });\r\n        this.el.dispatchEvent(weight);\r\n    }\r\n    render() {\r\n        return (h(\"div\", { class: \"equipment-line\" },\r\n            h(\"rpg-text-input\", { \"starting-text\": this.name }),\r\n            h(\"rpg-text-input\", { class: \"quantity\", \"starting-text\": this.currentCount }),\r\n            h(\"rpg-text-input\", { class: \"weight\", \"starting-text\": this.currentWeight }),\r\n            h(\"span\", null,\r\n                \"(\",\r\n                this.currentWeight,\r\n                \")\")));\r\n    }\r\n    static get is() { return \"rpg-equipment-generic\"; }\r\n    static get properties() { return {\r\n        \"currentCount\": {\r\n            \"state\": true\r\n        },\r\n        \"currentWeight\": {\r\n            \"state\": true\r\n        },\r\n        \"el\": {\r\n            \"elementRef\": true\r\n        },\r\n        \"itemWeight\": {\r\n            \"state\": true\r\n        },\r\n        \"name\": {\r\n            \"type\": String,\r\n            \"attr\": \"name\"\r\n        },\r\n        \"size\": {\r\n            \"type\": String,\r\n            \"attr\": \"size\"\r\n        },\r\n        \"startingCount\": {\r\n            \"type\": Number,\r\n            \"attr\": \"starting-count\"\r\n        },\r\n        \"useItem\": {\r\n            \"method\": true\r\n        },\r\n        \"weight\": {\r\n            \"type\": Number,\r\n            \"attr\": \"weight\"\r\n        }\r\n    }; }\r\n    static get style() { return \"/**style-placeholder:rpg-equipment-generic:**/\"; }\r\n}\r\n"}