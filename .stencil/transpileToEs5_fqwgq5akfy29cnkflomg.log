App.loadBundle('/**:bundle-id:**/', ['exports'], function (exports) {
    var h = window.App.h;
    var EquipmentBox = /** @class */ (function () {
        function EquipmentBox() {
            this.numGeneric = 10;
            this.numWeapons = 3;
            this.totalWeight = 0;
        }
        EquipmentBox.prototype.render = function () {
            var genericLines = [];
            var weaponLines = [];
            for (var i = 0; i < this.numWeapons; i++) {
                weaponLines.push('');
            }
            for (var i = 0; i < this.numGeneric; i++) {
                genericLines.push(h("rpg-equipment-generic", null));
            }
            return (h("div", { class: 'equipment-box' }, weaponLines.map(function (el) { return el; }), genericLines.map(function (el) { return el; })));
        };
        Object.defineProperty(EquipmentBox, "is", {
            get: function () { return "rpg-equipment-box"; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EquipmentBox, "properties", {
            get: function () {
                return {
                    "el": {
                        "elementRef": true
                    },
                    "numGeneric": {
                        "type": Number,
                        "attr": "num-generic"
                    },
                    "numWeapons": {
                        "type": Number,
                        "attr": "num-weapons"
                    },
                    "totalWeight": {
                        "state": true
                    }
                };
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EquipmentBox, "style", {
            get: function () { return "/**style-placeholder:rpg-equipment-box:**/"; },
            enumerable: true,
            configurable: true
        });
        return EquipmentBox;
    }());
    var EquipmentGeneric = /** @class */ (function () {
        function EquipmentGeneric() {
            this.name = '';
            this.startingCount = 0;
            this.weight = 0;
            this.currentWeight = 0;
        }
        EquipmentGeneric.prototype.useItem = function () {
            this.currentCount = this.currentCount - 1;
            if (this.currentCount < 0) {
                this.currentCount = 0;
                return false;
            }
            this.eventUsed();
            return true;
        };
        EquipmentGeneric.prototype.componentWillLoad = function () {
            this.currentCount = this.startingCount;
            this.itemWeight = this.weight;
        };
        EquipmentGeneric.prototype.componentDidLoad = function () {
            var _this = this;
            this.el.querySelector('.weight')
                .addEventListener('rpg_text_changed', function (ev) { return _this.playerChangedWeight(ev); });
            this.el.querySelector('.quantity')
                .addEventListener('rpg_text_changed', function (ev) { return _this.playerChangedQuantity(ev); });
        };
        EquipmentGeneric.prototype.recalculateWeight = function () {
            this.currentWeight = this.currentCount * this.itemWeight;
            console.log(this.currentWeight);
            this.eventWeightChanged();
        };
        EquipmentGeneric.prototype.playerChangedWeight = function (event) {
            this.itemWeight = parseInt(event.detail.newText);
            this.recalculateWeight();
        };
        EquipmentGeneric.prototype.playerChangedQuantity = function (event) {
            this.currentCount = parseInt(event.detail.newText);
            this.recalculateWeight();
        };
        EquipmentGeneric.prototype.eventUsed = function () {
            var eUsed = new CustomEvent('rpg_item_used', {
                detail: {
                    name: this.name,
                    remainingCount: this.currentCount,
                }
            });
            this.el.dispatchEvent(eUsed);
        };
        EquipmentGeneric.prototype.eventWeightChanged = function () {
            var weight = new CustomEvent('rpg_item_weight_changed', {
                detail: {
                    name: this.name,
                    newWeight: this.currentWeight
                }
            });
            this.el.dispatchEvent(weight);
        };
        EquipmentGeneric.prototype.render = function () {
            return (h("div", { class: "equipment-line" }, h("rpg-text-input", { "starting-text": this.name }), h("rpg-text-input", { class: "quantity", "starting-text": this.currentCount }), h("rpg-text-input", { class: "weight", "starting-text": this.currentWeight }), h("span", null, "(", this.currentWeight, ")")));
        };
        Object.defineProperty(EquipmentGeneric, "is", {
            get: function () { return "rpg-equipment-generic"; },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EquipmentGeneric, "properties", {
            get: function () {
                return {
                    "currentCount": {
                        "state": true
                    },
                    "currentWeight": {
                        "state": true
                    },
                    "el": {
                        "elementRef": true
                    },
                    "itemWeight": {
                        "state": true
                    },
                    "name": {
                        "type": String,
                        "attr": "name"
                    },
                    "size": {
                        "type": String,
                        "attr": "size"
                    },
                    "startingCount": {
                        "type": Number,
                        "attr": "starting-count"
                    },
                    "useItem": {
                        "method": true
                    },
                    "weight": {
                        "type": Number,
                        "attr": "weight"
                    }
                };
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(EquipmentGeneric, "style", {
            get: function () { return "/**style-placeholder:rpg-equipment-generic:**/"; },
            enumerable: true,
            configurable: true
        });
        return EquipmentGeneric;
    }());
    exports.RpgEquipmentBox = EquipmentBox;
    exports.RpgEquipmentGeneric = EquipmentGeneric;
    Object.defineProperty(exports, '__esModule', { value: true });
});
